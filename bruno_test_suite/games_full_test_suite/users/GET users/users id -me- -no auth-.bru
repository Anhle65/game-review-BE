meta {
  name: users id -me- -no auth-
  type: http
  seq: 6
}

get {
  url: {{BASE_URL}}/users/1
  body: none
  auth: none
}

tests {
  var expectedData = {
    "firstName": "Kristy",
    "lastName": "Lincoln"
  }
  
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Valid user data", function() {
      try{
          var user = res.getBody();
          for(const [key, value] of Object.entries(expectedData)) {
              expect(user[key]).to.equal(value);
          }
      } catch (err) {
          expect.fail("Incorrect user data");
      }
  });
  
  test("Email not returned", function() {
      try {
          var user = res.getBody();
          if (user.hasOwnProperty('email')){
              expect.fail("Email must not be returned")
          }
      } catch (err) {
          expect.fail("Incorrect user data");
      }
  })
}
